//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChangeCaseGUI.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.3.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StartHidden {
            get {
                return ((bool)(this["StartHidden"]));
            }
            set {
                this["StartHidden"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StartToolbar {
            get {
                return ((bool)(this["StartToolbar"]));
            }
            set {
                this["StartToolbar"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RegisterHotkeys {
            get {
                return ((bool)(this["RegisterHotkeys"]));
            }
            set {
                this["RegisterHotkeys"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Hotkeys.Hotkey hkUpper {
            get {
                return ((global::Hotkeys.Hotkey)(this["hkUpper"]));
            }
            set {
                this["hkUpper"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Hotkeys.Hotkey hkLower {
            get {
                return ((global::Hotkeys.Hotkey)(this["hkLower"]));
            }
            set {
                this["hkLower"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Hotkeys.Hotkey hkPlain {
            get {
                return ((global::Hotkeys.Hotkey)(this["hkPlain"]));
            }
            set {
                this["hkPlain"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Hotkeys.Hotkey hkCapsLock {
            get {
                return ((global::Hotkeys.Hotkey)(this["hkCapsLock"]));
            }
            set {
                this["hkCapsLock"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Hotkeys.Hotkey hkProcessText {
            get {
                return ((global::Hotkeys.Hotkey)(this["hkProcessText"]));
            }
            set {
                this["hkProcessText"] = value;
            }
        }
    }
}
